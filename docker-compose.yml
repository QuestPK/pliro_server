version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}" ,"-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 10s

#  redis:
#    image: "redis:alpine"
#    container_name: redis_container
#    restart: always
#    ports:
#      - "6379:6379"

#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin_container
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: abdul.mannan@questlab.pk
#      PGADMIN_DEFAULT_PASSWORD: abdul
#    ports:
#      - "5050:80"
#    depends_on:
#      - db

  fastapi_app:
    build: .
    container_name: fastapi_container
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
#      REDIS_URL: redis://redis:6379/0
      PYTHONPATH: /app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./static:/app/static

#  worker:
#    build: .
#    container_name: worker_container
#    restart: always
#    depends_on:
#      db:
#        condition: service_healthy
#      redis:
#        condition: service_started
#    env_file:
#      - .env
#    environment:
#      REDIS_URL: redis://redis:6379/0
#      DATABASE_URL: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
#    working_dir: /app
#    volumes:
#      - .:/app
#    command: ["python", "-m", "app.worker"]

volumes:
  postgres_data: